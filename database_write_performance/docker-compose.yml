services:
  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: q1w2e3r4
      POSTGRES_DB: benchmark
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: -c 'max_connections=1000'
    ports:
      - "15432:5432"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  mysql: 
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: q1w2e3r4
      MYSQL_DATABASE: benchmark
      MYSQL_USER: user
      MYSQL_PASSWORD: q1w2e3r4
    volumes:
      - mysql_data:/var/lib/mysql
    command: [ "--max_connections=1000" ]
    ports:
      - "13306:3306"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  mariadb:
    image: mariadb:11.8
    environment:
      MARIADB_ROOT_PASSWORD: q1w2e3r4
      MARIADB_DATABASE: benchmark
      MARIADB_USER: user
      MARIADB_PASSWORD: q1w2e3r4
    volumes:
      - mariadb_data:/var/lib/mysql
    command: ["--max_connections=1000", "--innodb-buffer-pool-size=4G"]
    ports:
      - "23306:3306"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  mongodb:
    image: mongo:8
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: q1w2e3r4
      MONGO_INITDB_DATABASE: benchmark
    volumes:
      - mongo_data:/data/db
    command: --wiredTigerCacheSizeGB 4
    ports:
      - "27017:27017"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  cassandradb: 
    image: cassandra:5
    environment:
      CASSANDRA_CLUSTER_NAME: TestCluster
      CASSANDRA_DC: dc1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 256
      HEAP_NEWSIZE: 1G
      MAX_HEAP_SIZE: 4G
    volumes:
      - cassandra_data:/var/lib/cassandra
    ports:
      - "19042:9042"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  scylladb: 
    image: scylladb/scylla:2025.3
    volumes:
      - scylla_data:/var/lib/scylla
    ports:
      - "19043:9042"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  influxdb_v2:
    image: influxdb:2.7
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: user
      DOCKER_INFLUXDB_INIT_PASSWORD: q1w2e3r4
      DOCKER_INFLUXDB_INIT_ORG: benchmark
      DOCKER_INFLUXDB_INIT_BUCKET: benchmark
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: benchmark-token-1234567890abcdef
    volumes:
      - influxdb_data:/var/lib/influxdb2
    ports:
      - "18086:8086"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  timescaledb: 
    image: timescale/timescaledb:2.21.3-pg17
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: q1w2e3r4
      POSTGRES_DB: benchmark
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    command: -c 'max_connections=1000'
    ports:
      - "25432:5432"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  couchdb:
    image: couchdb:3.4
    environment:
      COUCHDB_USER: user
      COUCHDB_PASSWORD: q1w2e3r4
    volumes:
      - couchdb_data:/opt/couchdb/data
      - ./couchdb/local.ini:/opt/couchdb/etc/local.d/local.ini
    ports:
      - "15984:5984"
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  yugabytedb:
    image: yugabytedb/yugabyte:2024.2.5.0-b59
    command: ["bash", "-c", "yugabyted start --daemon=false --tserver_flags=ysql_max_connections=1000"]
    environment:
      - YSQL_PASSWORD=q1w2e3r4
    volumes:
      - yugabyte_data:/home/yugabyte/yb_data
    ports:
      - "17000:7000"  # YB-Master web UI
      - "19000:9000"  # YB-TServer web UI  
      - "5433:5433"  # YSQL (PostgreSQL-compatible)
      - "19042:9042"  # YCQL (Cassandra-compatible)
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  cockroachdb:
    image: cockroachdb/cockroach:v24.2.5
    command: start-single-node --insecure --http-addr=0.0.0.0:8080
    environment:
      COCKROACH_DATABASE: benchmark
      COCKROACH_USER: benchmarkuser
    volumes:
      - cockroach_data:/cockroach/cockroach-data
    ports:
      - "26257:26257"  # CockroachDB SQL
      - "8080:8080"    # CockroachDB Admin UI
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  clickhouse:
    image: clickhouse/clickhouse-server:25.3
    environment:
      CLICKHOUSE_DB: benchmark
      CLICKHOUSE_USER: user
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_PASSWORD: q1w2e3r4
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    ports:
      - "18123:8123"   # ClickHouse HTTP interface
      - "19000:9000"   # ClickHouse native protocol
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  etcd:
    image: quay.io/coreos/etcd:v3.5.17
    command:
      - /usr/local/bin/etcd
      - --name=etcd-benchmark
      - --data-dir=/etcd-data
      - --listen-client-urls=http://0.0.0.0:2379
      - --advertise-client-urls=http://0.0.0.0:2379
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-advertise-peer-urls=http://0.0.0.0:2380
      - --initial-cluster=etcd-benchmark=http://0.0.0.0:2380
      - --initial-cluster-token=etcd-cluster-1
      - --initial-cluster-state=new
      - --log-level=info
      - --logger=zap
      - --log-outputs=stderr
      - --auto-compaction-retention=1
      - --quota-backend-bytes=8589934592
    volumes:
      - etcd_data:/etcd-data
    ports:
      - "2379:2379"   # etcd client port
      - "2380:2380"   # etcd peer port
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  nats:
    image: nats:2.10-alpine
    command:
      - "--jetstream"
      - "--store_dir=/data"
      - "-m=8222"
    volumes:
      - nats_data:/data
    ports:
      - "4222:4222"   # NATS client port
      - "8222:8222"   # NATS HTTP monitoring port
      - "6222:6222"   # NATS cluster port
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M
  tidb:
    image: pingcap/tidb:v8.5.0
    ports:
      - "4000:4000"   # TiDB SQL port
      - "10080:10080" # TiDB status port
    deploy:
      resources:
        limits:
          cpus: "4"
          memory: 8096M

volumes:
  pgdata:
    driver: local
  mysql_data:
    driver: local
  mariadb_data:
    driver: local
  mongo_data:
    driver: local
  cassandra_data:
    driver: local 
  scylla_data:
    driver: local
  influxdb_data:
    driver: local
  timescaledb_data:
    driver: local
  couchdb_data:
    driver: local
  yugabyte_data: 
    driver: local
  cockroach_data:
    driver: local
  clickhouse_data:
    driver: local
  etcd_data:
    driver: local
  nats_data:
    driver: local